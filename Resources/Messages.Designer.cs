//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebApplication1.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid polygon data..
        /// </summary>
        public static string InvalidPolygonData {
            get {
                return ResourceManager.GetString("InvalidPolygonData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line added successfully..
        /// </summary>
        public static string LineAdded {
            get {
                return ResourceManager.GetString("LineAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line deleted successfully..
        /// </summary>
        public static string LineDeleted {
            get {
                return ResourceManager.GetString("LineDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line with name &apos;{0}&apos; already exists!.
        /// </summary>
        public static string LineExistsWithName {
            get {
                return ResourceManager.GetString("LineExistsWithName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A line with the same start and end coordinates already exists!.
        /// </summary>
        public static string LineExistsWithSameCoordinates {
            get {
                return ResourceManager.GetString("LineExistsWithSameCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid line data..
        /// </summary>
        public static string LineInvalid {
            get {
                return ResourceManager.GetString("LineInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start and end points must be within the borders of Türkiye..
        /// </summary>
        public static string LineInvalidCoordinates {
            get {
                return ResourceManager.GetString("LineInvalidCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line name cannot be empty!.
        /// </summary>
        public static string LineNameEmpty {
            get {
                return ResourceManager.GetString("LineNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line name must be maximum 70 characters..
        /// </summary>
        public static string LineNameTooLong {
            get {
                return ResourceManager.GetString("LineNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start and end point cannot be the same..
        /// </summary>
        public static string LineSameStartAndEnd {
            get {
                return ResourceManager.GetString("LineSameStartAndEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All items are listed..
        /// </summary>
        public static string Listed {
            get {
                return ResourceManager.GetString("Listed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point added successfully..
        /// </summary>
        public static string PointAdded {
            get {
                return ResourceManager.GetString("PointAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point deleted successfully..
        /// </summary>
        public static string PointDeleted {
            get {
                return ResourceManager.GetString("PointDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point with name &apos;{0}&apos; already exists!.
        /// </summary>
        public static string PointExists {
            get {
                return ResourceManager.GetString("PointExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point with name &apos;{0}&apos; found..
        /// </summary>
        public static string PointFound {
            get {
                return ResourceManager.GetString("PointFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point with ID &apos;{0}&apos; not found!.
        /// </summary>
        public static string PointNotFoundId {
            get {
                return ResourceManager.GetString("PointNotFoundId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point with name &apos;{0}&apos; not found!.
        /// </summary>
        public static string PointNotFoundName {
            get {
                return ResourceManager.GetString("PointNotFoundName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point updated successfully..
        /// </summary>
        public static string PointUpdated {
            get {
                return ResourceManager.GetString("PointUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polygon added successfully..
        /// </summary>
        public static string PolygonAddedSuccessfully {
            get {
                return ResourceManager.GetString("PolygonAddedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude must be between 35.0 and 43.0 for Türkiye!.
        /// </summary>
        public static string ValidationLat {
            get {
                return ResourceManager.GetString("ValidationLat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude must be between 25.0 and 45.0 for Türkiye!.
        /// </summary>
        public static string ValidationLon {
            get {
                return ResourceManager.GetString("ValidationLon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point name cannot be empty!.
        /// </summary>
        public static string ValidationNameEmpty {
            get {
                return ResourceManager.GetString("ValidationNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point name must be maximum 70 characters!.
        /// </summary>
        public static string ValidationNameLong {
            get {
                return ResourceManager.GetString("ValidationNameLong", resourceCulture);
            }
        }
    }
}
